EOI             : /$/                                                                   ;
binop_term      : /*/
                | /\//
                | /%/                                                                   ;
binop_exp       : /+/
                | /-/                                                                   ;
unop            : /-/ | /!/                                                             ;
parens          : '(' <expression> ')'                                                  ;
identifier      : /[a-zA-Z_][a-zA-Z0-9_]*/                                              ;
decimal_const   : /[0-9]+/                                                              ;
double_const    : /[0-9]+([.][0-9]+)/                                                   ;
literal         : <decimal_const>                                                       ;
array           : '[' <expression> ']'                                                  ;
field           : '.' <identifier>                                                      ;
primary         : <identifier>
                | <literal>
                | <parens>                                                              ;
func_call       : '(' <expression> (',' <expression>)* ')'                              ;
postfix         : <primary> <func_call>?                                                ;
unary           : <unop> <unary> | <postfix>                                            ;
term            : <unary> (<binop_term> (<unary> | <expression>))*                      ;
expression      : <term> (<binop_exp> <term>)*                                          ;
lang            : <SOI> <expression> <EOI>                                              ;